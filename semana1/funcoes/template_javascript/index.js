// #####################################
// Exerc√≠cios de interpreta√ß√£o de c√≥digo
// #####################################

// -------------------------------> Exerc√≠cio 1 <-------------------------------

// 1 - Leia o c√≥digo abaixo

// function minhaFuncao(variavel) {
//   return variavel * 5;
// }

// console.log(minhaFuncao(2));
// console.log(minhaFuncao(10));

// a) O que vai ser impresso no console?
// b) O que aconteceria se retirasse os dois console.log e simplesmente invocasse a fun√ß√£o minhaFuncao(2) e minhaFuncao(10)? O que apareceria no console?

// 10
// 50

// -------------------------------> Exerc√≠cio 2 <-------------------------------

// 2 - Leia o c√≥digo abaixo

// let textoDoUsuario = prompt("Insira um texto");

// const outraFuncao = function (texto) {
//   return texto.toLowerCase().includes("cenoura");
// };

// const resposta = outraFuncao(textoDoUsuario);
// console.log(resposta);

// a. Explique o que essa fun√ß√£o faz e qual √© sua utilidade
// b. Determine qual ser√° a sa√≠da no console para cada uma das 3 entradas do usu√°rio:
// i.   Eu gosto de cenoura
// ii.  CENOURA √© bom pra vista
// iii. Cenouras crescem na terra

// A
// Essa fun√ß√£o ir√° retornar um texto em letras min√∫sculas e verificar se nesse texto h√° a palavra "cenoura". Caso haja a palavra "cenoura" a vari√°vel `resposta¬¥ ir√° retornar um Boolean.

// B
// true
// Havia colocado false, mas √© true. Pensei que o case senstive fosse interferir. ü•≤
// Havia colocado false, mas √© true. ü•≤

// ###############################
// Exerc√≠cios de escrita de c√≥digo
// ###############################

// -------------------------------> Exerc√≠cio 1 <-------------------------------

// 1 - Escreva as fun√ß√µes explicadas abaixo:

// a) A fun√ß√£o n√£o deve receber nenhum par√¢metro e deve imprimir uma mensagem falando algumas informa√ß√µes sobre voc√™, como:

// "Eu sou Caio, tenho 23 anos, moro em S√£o Paulo e sou estudante."
// Troque o nome, idade, cidade e se √© estudante ou n√£o por informa√ß√µes sobre voc√™. Lembrando que a fun√ß√£o n√£o possui entradas, apenas imprime essa mensagem.

// b)  Agora escreva uma fun√ß√£o que receba 4 par√¢metros que correspondem √†s informa√ß√µes de uma pessoa: o nome (string), a idade (number), a cidade (string) e uma profiss√£o (string). Ela deve retornar uma string que unifique todas as informa√ß√µes da pessoa em uma s√≥ mensagem com o template:

// Eu sou [NOME], tenho [IDADE] anos, moro em [ENDERE√áO] e sou [PROFISS√ÉO].

// A
function description() {
  console.log(
    "Eu sou Marcus, tenho 28 anos, moro em Salgueiro - PE e sou estudante."
  );
}

description();

// B
function sobreEstaPessoa(nome, idade, endereco, profissao) {
  return `Eu sou ${nome}, tenho ${idade} anos, moro em ${endereco} e sou ${profissao}. `;
}

console.log(sobreEstaPessoa("Marcus", 28, "Salgueiro - PE", "estudante"));

// -------------------------------> Exerc√≠cio 2 <-------------------------------

// 2 - Escreva as fun√ß√µes explicadas abaixo:

// a) Escreva uma fun√ß√£o que receba 2 n√∫meros como par√¢metros, e, dentro da fun√ß√£o, fa√ßa a soma das duas entradas e retorne o resultado. Invoque a fun√ß√£o e imprima no console o resultado.
// b) Fa√ßa uma fun√ß√£o que recebe 2 n√∫meros e retorne um booleano que informa se o primeiro n√∫mero √© maior ou igual ao segundo.
// c) Escreva uma fun√ß√£o que receba um n√∫mero e devolva um booleano indicando se ele √© par ou n√£o
// d) Fa√ßa uma fun√ß√£o que recebe uma mensagem (string) como par√¢metro e imprima o tamanho dessa mensagem, juntamente com uma vers√£o dela em letras mai√∫sculas.

// A
function resultado(num1, num2) {
  const soma = num1 + num2;
  console.log("Letra a) O resultado da soma √©: ", soma);
}

resultado(80_000, 10);

// B
function maiorOuIgual(num1, num2) {
  const verifique = num1 >= num2;
  return verifique;
}

console.log(
  "Letra b) 100.000 √© maior ou igual a 999.999",
  maiorOuIgual(100_000, 99_999)
);

// C
function parOuImpar(num) {
  const verifique = num % 2 === 0;
  return verifique;
}

console.log("Letra c) Esse n√∫mero √© par?", parOuImpar(10));

// D
function mensagem(msg) {
  const tamanhoMensagem = "Ol√°";
  console.log(tamanhoMensagem.length, tamanhoMensagem.toUpperCase());
}

console.log(mensagem());

// 3 - Crie uma fun√ß√£o para cada uma das opera√ß√µes b√°sicas (soma, subtra√ß√£o, multiplica√ß√£o e divis√£o). Em seguida, pe√ßa para o usu√°rio inserir dois n√∫meros e chame essas 4 fun√ß√µes com esses valores inputados pelo usu√°rio sendo o argumento. Por fim, mostre no console o resultado das opera√ß√µes:

// Soma
function soma() {
  const primeiroNumero = Number(prompt("Por favor, entre com um n√∫mero!"));
  const segundoNumero = Number(prompt("Entre com mais um n√∫mero!"));

  console.log("O resultado da soma √©:", primeiroNumero + segundoNumero);
}

console.log(soma());

// Subtra√ß√£o
function subtracao() {
  const primeiroNumero = Number(prompt("Por favor, entre com um n√∫mero!"));
  const segundoNumero = Number(prompt("Entre com mais um n√∫mero!"));

  console.log("O resultado da subtra√ß√£o √©:", primeiroNumero - segundoNumero);
}

console.log(subtracao());

// Multiplica√ß√£o
function multiplicacao() {
  const primeiroNumero = Number(prompt("Por favor, entre com um n√∫mero!"));
  const segundoNumero = Number(prompt("Entre com mais um n√∫mero!"));

  console.log(
    "O resultado da multiplica√ß√£o √©:",
    primeiroNumero * segundoNumero
  );
}

console.log(multiplicacao());

// Divis√£o
function divisao() {
  const primeiroNumero = Number(prompt("Por favor, entre com um n√∫mero!"));
  const segundoNumero = Number(prompt("Entre com mais um n√∫mero!"));

  console.log("O resultado da divis√£o √©:", primeiroNumero / segundoNumero);
}

console.log(divisao());
